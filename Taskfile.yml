version: "3"

vars:
  GO_MODULE: github.com/wombatwisdom/components

tasks:
  default:
    desc: Show available tasks
    cmds:
      - task --list-all

  status:
    desc: Show project status
    cmds:
      - echo "WombatWisdom Components Status (Go Workspace):"
      - echo ""
      - echo "Framework module:"
      - echo "  - framework/ - Core interfaces and utilities"
      - echo ""
      - echo "Component modules:"
      - echo "  - components/aws-s3/ - AWS S3 Input component"
      - echo "  - components/mqtt/ - MQTT Input/Output components"  
      - echo "  - components/nats/ - NATS Input/Output components"
      - echo ""
      - echo "Tools:"
      - echo "  - tools/ - Build scripts and templates"
      - echo ""
      - echo "Quick commands:"
      - echo "  task test:all   - Run all workspace tests"
      - echo "  task build:all  - Build all workspace modules"
      - echo "  task lint:all   - Lint all workspace modules"

  # Development Environment
  setup:
    desc: Setup development environment
    cmds:
      - go version
      - go work sync
      - task: tools:install

  clean:
    desc: Clean build artifacts and caches
    cmds:
      - go clean -cache
      - go clean -testcache
      - go clean -modcache

  # Testing Tasks (Multi-Module)
  test:
    desc: Run tests for all workspace modules
    cmds:
      - echo "Running tests for all workspace modules..."
      - go test ./framework/...
      - go test ./components/aws-s3/...
      - go test ./components/mqtt/...
      - go test ./components/nats/...
      - echo "All workspace tests passed!"

  test:all:
    desc: Run all tests in workspace
    cmds:
      - task: test

  test:framework:
    desc: Run framework tests only
    cmds:
      - go test ./framework/... -v

  test:aws-s3:
    desc: Run AWS S3 component tests
    cmds:
      - go test ./components/aws-s3/... -v

  test:mqtt:
    desc: Run MQTT component tests
    cmds:
      - go test ./components/mqtt/... -v

  test:nats:
    desc: Run NATS component tests
    cmds:
      - go test ./components/nats/... -v

  test:coverage:
    desc: Run tests with coverage report
    cmds:
      - go test ./framework/... ./components/aws-s3/... ./components/mqtt/... ./components/nats/... -coverprofile=coverage.out
      - go tool cover -html=coverage.out -o coverage.html
      - echo "Coverage report generated at coverage.html"

  test:race:
    desc: Run tests with race detector
    cmds:
      - go test -race ./framework/... ./components/aws-s3/... ./components/mqtt/... ./components/nats/...

  # Build Tasks (Multi-Module)
  build:
    desc: Build all workspace modules
    cmds:
      - echo "Building all workspace modules..."
      - go build ./framework/...
      - go build ./components/aws-s3/...
      - go build ./components/mqtt/...
      - go build ./components/nats/...
      - echo "All modules built successfully!"

  build:all:
    desc: Build all workspace modules
    cmds:
      - task: build

  build:check:
    desc: Check that all modules compile
    cmds:
      - go build ./framework/... ./components/aws-s3/... ./components/mqtt/... ./components/nats/...

  # Code Quality (Multi-Module)
  lint:
    desc: Run linting checks on all modules
    deps: [tools:install]
    cmds:
      - echo "Running linting checks on all modules..."
      - go vet ./framework/... ./components/aws-s3/... ./components/mqtt/... ./components/nats/...
      - gofmt -l ./framework ./components
      - echo "Linting completed"

  format:
    desc: Format code in all modules
    cmds:
      - go fmt ./framework/... ./components/aws-s3/... ./components/mqtt/... ./components/nats/...

  vet:
    desc: Run go vet on all modules
    cmds:
      - go vet ./framework/... ./components/aws-s3/... ./components/mqtt/... ./components/nats/...

  # Dependency Management (Workspace)
  deps:tidy:
    desc: Tidy module dependencies
    cmds:
      - cd framework && go mod tidy
      - cd components/aws-s3 && go mod tidy
      - cd components/mqtt && go mod tidy
      - cd components/nats && go mod tidy
      - cd tools && go mod tidy

  deps:sync:
    desc: Sync workspace dependencies
    cmds:
      - go work sync

  # CI/CD Tasks
  ci:test:
    desc: Run CI tests for all modules
    cmds:
      - task: test
      - task: vet
      - task: build:check

  # Tools Installation
  tools:install:
    desc: Install development tools
    cmds:
      - go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
      - go install golang.org/x/tools/cmd/goimports@latest
      - go install github.com/atombender/go-jsonschema@84c8d2b98bf0373873df8a353b122530a7110c70