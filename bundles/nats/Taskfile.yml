version: "3"

silent: true

vars:
  COMPONENT_NAME: "nats"
  # Schema mappings - more maintainable format but internally converted to string
  SCHEMA_MAPPINGS_LIST:
    - "dev.wombat.component.nats.core.system.config=./core/system_config.go"
    - "dev.wombat.component.nats.core.input.config=./core/input_config.go"
    - "dev.wombat.component.nats.core.output.config=./core/output_config.go"
    - "dev.wombat.component.nats.stream.config=./nats_stream_config.go"
  SHOW_PROGRESS: "false"

includes:
  common:
    taskfile: ../_common/Taskfile.yml

tasks:
  generate:
    desc: Generate code from schemas
    cmds:
      - |
        if [ {{len .SCHEMA_MAPPINGS_LIST}} -gt 0 ] && [ -n "{{.COMPONENT_NAME}}" ]; then
          go-jsonschema --struct-name-from-title \
            --package {{.COMPONENT_NAME}} \
            {{range .SCHEMA_MAPPINGS_LIST}}--schema-output={{.}} {{end}}\
            *.schema.yaml > /dev/null
        fi

  validate:
    desc: Validate the component
    cmds:
      - task: generate
      - task: common:validate
        vars:
          COMPONENT_NAME: "{{.COMPONENT_NAME}}"
  
  test:
    desc: Run component tests
    cmds:
      - task: common:test

  test:unit:
    desc: Run unit tests only
    cmds:
      - task: common:test:unit

  test:integration:
    desc: Run integration tests only
    cmds:
      - task: common:test:integration

  test:coverage:
    desc: Run component tests with coverage
    cmds:
      - task: common:test:coverage

  test:race:
    desc: Run component tests with race detector
    cmds:
      - task: common:test:race
        
  build:
    desc: Build the component
    cmds:
      - task: generate
      - task: common:build
        vars:
          COMPONENT_NAME: "{{.COMPONENT_NAME}}"

  vet:
    desc: Run go vet on component
    cmds:
      - task: common:vet

  format:
    desc: Format component Go code
    cmds:
      - task: common:format
