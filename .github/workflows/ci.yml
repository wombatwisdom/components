name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    services:
      nats:
        image: nats:alpine
        ports:
          - 4222:4222
          - 8222:8222
        options: >-
          --health-cmd "nats-server --help"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 3
          --health-start-period 10s
          
      mqtt:
        image: eclipse-mosquitto:latest
        ports:
          - 1883:1883
        options: >-
          --health-cmd "mosquitto_pub -h localhost -t test -m test"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.24

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-1.24-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-1.24-

    - name: Install Task
      uses: arduino/setup-task@v2
      with:
        version: 3.x
        repo-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install Go tools
      run: |
        go install golang.org/x/tools/cmd/goimports@latest
        echo "$HOME/go/bin" >> $GITHUB_PATH

    - name: Sync workspace dependencies
      run: |
        go work sync
        go mod tidy -C framework
        go mod tidy -C components/aws-s3
        go mod tidy -C components/eventbridge
        go mod tidy -C components/mqtt
        go mod tidy -C components/nats
        go mod tidy -C tools

    - name: Download dependencies
      run: |
        go mod download -C framework
        go mod download -C components/aws-s3
        go mod download -C components/eventbridge
        go mod download -C components/mqtt
        go mod download -C components/nats
        go mod download -C tools

    - name: Verify dependencies
      run: |
        go mod verify -C framework
        go mod verify -C components/aws-s3
        go mod verify -C components/eventbridge
        go mod verify -C components/mqtt
        go mod verify -C components/nats
        go mod verify -C tools

    - name: Run tests
      run: task test
      env:
        NATS_URL: nats://localhost:4222
        MQTT_URL: tcp://localhost:1883

    - name: Run tests with race detector
      run: |
        (cd framework && go test -race ./...)
        (cd components/aws-s3 && go test -race ./...)
        (cd components/eventbridge && go test -race ./...)
        (cd components/mqtt && go test -race ./...)
        (cd components/nats && go test -race ./...)

    - name: Generate test coverage
      run: task test:coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella

  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.24

    - name: Install Task
      uses: arduino/setup-task@v2
      with:
        version: 3.x
        repo-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install Go tools
      run: |
        go install golang.org/x/tools/cmd/goimports@latest
        echo "$HOME/go/bin" >> $GITHUB_PATH

    - name: Sync workspace dependencies
      run: |
        go work sync
        go mod tidy -C framework
        go mod tidy -C components/aws-s3
        go mod tidy -C components/eventbridge
        go mod tidy -C components/mqtt
        go mod tidy -C components/nats
        go mod tidy -C tools

    - name: Run basic linting
      run: |
        # Run go vet on each module separately
        go vet -C framework ./...
        go vet -C components/aws-s3 ./...
        go vet -C components/eventbridge ./...
        go vet -C components/mqtt ./...
        go vet -C components/nats ./...

    - name: Run go vet
      run: task vet

    - name: Check formatting
      run: task format:check

  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.24

    - name: Install Task
      uses: arduino/setup-task@v2
      with:
        version: 3.x
        repo-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install Go tools
      run: |
        go install golang.org/x/tools/cmd/goimports@latest
        echo "$HOME/go/bin" >> $GITHUB_PATH

    - name: Sync workspace dependencies
      run: |
        go work sync
        go mod tidy -C framework
        go mod tidy -C components/aws-s3
        go mod tidy -C components/eventbridge
        go mod tidy -C components/mqtt
        go mod tidy -C components/nats
        go mod tidy -C tools

    - name: Build all modules
      run: task build

    - name: Check all modules compile
      run: task build:check

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.24

    - name: Run basic security checks
      run: |
        echo "Running basic security checks..."
        # Check for common security issues
        grep -r "password" --include="*.go" ./framework ./components || echo "No hardcoded passwords found"
        grep -r "secret" --include="*.go" ./framework ./components || echo "No hardcoded secrets found"
        grep -r "token" --include="*.go" ./framework ./components || echo "No hardcoded tokens found"
        echo "Basic security scan completed"